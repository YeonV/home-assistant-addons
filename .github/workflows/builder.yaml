name: Builder

env:
  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs"

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
       description: 'Version'
       default: '2.0.55'
       required: false
jobs:
  version:
    runs-on: ubuntu-latest
    name: Set Version
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: set version
        run: |
          sed -i 's/\bversion: .*\b/version: ${{ github.event.inputs.version }}/' ./ledfx-beta/config.yaml &&
          sed -i 's/\bledfx==.*\b/ledfx==${{ github.event.inputs.version }}/' ./ledfx-beta/requirements.txt 
        # TODO: remove v from input.version. it will come as v2.0.62, but we need 2.0.62
        
      - uses: EndBug/add-and-commit@v9
  init:
    runs-on: ubuntu-latest
    needs: version
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

  build:
    needs: init
    runs-on: ubuntu-latest
    continue-on-error: true
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ["ledfx-beta"]
        arch: ["aarch64", "amd64", "armhf", "armv7", "i386"]


    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: set version
        run: |
          sed -i 's/\bversion: .*\b/version: ${{ github.event.inputs.version }}/' ./ledfx-beta/config.yaml &&
          sed -i 's/\bledfx==.*\b/ledfx==${{ github.event.inputs.version }}/' ./ledfx-beta/requirements.txt 
      # TODO: remove v from input.version. it will come as v2.0.62, but we need 2.0.62
      
      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        run: |
          if [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
             echo "::set-output name=build_arch::true";
             echo "::set-output name=image::$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)";
             if [[ -z "${{ github.head_ref }}" ]] && [[ "${{ github.event_name }}" == "push" ]]; then
                 echo "BUILD_ARGS=" >> $GITHUB_ENV;
             fi
           else
             echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
             echo "::set-output name=build_arch::false";
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        uses: home-assistant/builder@2025.02.0
        with:
          args: |
            ${{ env.BUILD_ARGS }} \
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
